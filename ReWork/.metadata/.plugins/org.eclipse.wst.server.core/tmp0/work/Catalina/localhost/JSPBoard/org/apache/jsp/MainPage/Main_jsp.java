/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2018-02-05 09:14:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.MainPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1515464693069L));
    _jspx_dependants.put("jar:file:/E:/Project/ReWork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/JSPBoard/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>게임 위키</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap.css\">\r\n");
      out.write("<script src=\"../js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("* {\r\n");
      out.write("\tmargin: 5px;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#info {\r\n");
      out.write("\theight: 590px;\r\n");
      out.write("\tborder: 1px solid black;\r\n");
      out.write("\toverflow: scroll;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#news {\r\n");
      out.write("\theight: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#news h3 {\r\n");
      out.write("\tborder-bottom: 1px solid black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#copyright {\r\n");
      out.write("\tfont-size: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hyper {\r\n");
      out.write("\tlink {text-decoration: none;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("visitied {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("action {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hover {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t<nav class=\"navbar navbar-default\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div id=\"banner\" class=\"col-sm-8\">\r\n");
      out.write("\t\t\t\t<a class=\"hyper\" href=\"main.do\" align=\"center\"><h1>게임위키</h1></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"srch\" class=\"col-sm-3\">\r\n");
      out.write("\t\t\t\t<form action=\"search\" method=\"post\" class=\"form-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"srch\" class=\"form-control\" placeholder=\"게시판명을 입력해주세요\"> <input\r\n");
      out.write("\t\t\t\t\t\ttype=\"button\" onclick=\"location.href ='../MainPage/NotReady.jsp'\" class=\"btn btn-default btn-sm\" value=\"검색\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<form action=\"makeboard.do\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" class=\"btn btn-default btn-sm pull-right\" value=\"새 게시판 만들기\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div id=\"info\" class=\"col-sm-9\">\r\n");
      out.write("\t\t\t<h2 align=\"center\">환영합니다</h2>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>구현한 기능:</strong> 게시판 db 테이블 만들기, 각 페이지 기본 폼(180112)\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<p>만든게시판 들어가기(180115)</p>\r\n");
      out.write("\t\t\t<p>네이버 스마트 에디터 드디어 적용(180115)</p>\r\n");
      out.write("\t\t\t<p>iframe 자동 리사이징 (180115)(문제생김)</p>\r\n");
      out.write("\t\t\t<p>iframe에 자유게시판 띄우기(180115)</p>\r\n");
      out.write("\t\t\t<p>만든 게시판의 db 테이블 생성(180115)</p>\r\n");
      out.write("\t\t\t<p>만든 게시판의 자유게시판 글 목록 불러오기(180115)</p>\r\n");
      out.write("\t\t\t<p>만든 게시판의 자유게시판에 글쓰기(180115)</p>\r\n");
      out.write("\t\t\t<p>게시판을 만들때 게시판 메뉴용 테이블도 같이 생성하기(180129)</p>\r\n");
      out.write("\t\t\t<p>게시판메뉴 테이블에서 menuTitle 불러오기(180129)</p>\r\n");
      out.write("\t\t\t<p>만든 게시판에 메뉴 추가 및 삭제 기능(180130)</p>\r\n");
      out.write("\t\t\t<p>메뉴 컨텐츠 불러오기(180130)</p>\r\n");
      out.write("\t\t\t<p>네이버 스마트 에디터 사용해 메뉴 컨텐츠 편집(180130)</p>\r\n");
      out.write("\t\t\t<p>이미지 업로드 기능 구현(180201)</p>\r\n");
      out.write("\t\t\t<p>부트스트랩을 이용한 디자인(약간)(180205)</p>\r\n");
      out.write("\t\t\t<p>미구현된 기능 막아놓기(180205)</p>\r\n");
      out.write("\t\t\t<p>게시판 생성시 대문 페이지 생성 및 수정가능(180205)</p>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>구현중인 기능:</strong>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<p>iframe 리사이징 기능구현</p>\r\n");
      out.write("\t\t\t<p>connection Pool</p>\r\n");
      out.write("\t\t\t<p>검색기능</p>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>문제:</strong> crate테이블 작동안함(테이블 이름에 ' ' 가 입력되어 쿼리\r\n");
      out.write("\t\t\t\t오류)...(180117)(해결)\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<p>해결방법 = String 쿼리를 나눠서 나중에 합쳐서 입력</p>\r\n");
      out.write("\t\t\t<p>한글 입력이 ??? 로 표시(180117) ->해결(180118)</p>\r\n");
      out.write("\t\t\t<p>모든 jsp페이지를 euc-kr로 인코딩= 실패</p>\r\n");
      out.write("\t\t\t<p>mysql 모든 인코딩을 euc-kr로 바꿈 = 실패</p>\r\n");
      out.write("\t\t\t<p>원인=get방식때문 /해결방법=톰캣 server.xml에서 connector에\r\n");
      out.write("\t\t\t\tURIEncoding=\"EUC-KR\"추가해줌</p>\r\n");
      out.write("\t\t\t<p>iframe자동 리사이징 작동불가(임시방편으로 스크롤로 대체)</p>\r\n");
      out.write("\t\t\t<p>업로드한 이미지가 화면을 벗어나는 현상(해결)</p>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t<strong>보류중인 기능:</strong> 로그인\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"news\" class=\"col-sm-2\">\r\n");
      out.write("\t\t\t<h3 align=\"center\">게시판 목록</h3>\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<p align=\"center\" id=\"copyright\">&copy; 2018 Kyland All Rights Reserved</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /MainPage/Main.jsp(137,3) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${news }", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /MainPage/Main.jsp(137,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("dto");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t<p>\r\n");
            out.write("\t\t\t\t\t<a href=\"board_view.do?bdId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.bdId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&bdTitle=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.bdTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.bdTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a>\r\n");
            out.write("\t\t\t\t</p>\r\n");
            out.write("\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
