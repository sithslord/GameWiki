package com.sosks1313.dao;

import java.awt.Frame;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import com.sosks1313.dto.BDto;

public class bDao extends JFrame{
	
	private Frame F =null;
	
	
	public ArrayList<BDto> list() { //리스트에 게시글을 조회하여 불러온다.
		ArrayList<BDto> dtos = new ArrayList<BDto>(); //배열 dtos
		
		Connection connection = null; //DB연결
		PreparedStatement preparedStatement = null; //represents a precompiled SQL statement
		ResultSet resultSet = null; //데이터베이스 결과 집합을 나타내는 데이터 테이블. 대개 데이터베이스를 쿼리하는 문을 실행하여 생성됩니다.
		
		try {
			
			Class.forName("com.mysql.jdbc.Driver"); //mysql jdbc 드라이버 로딩
			connection = DriverManager.getConnection("jdbc:mySql://localhost:3306/freeboard", "test", "sky0595");
			
			String query = "SELECT bId, bName, bTitle, bContent, bDate, bHit, bGroup, bStep, bIndent FROM mvcboard ORDER BY bGroup DESC, bStep ASC";// db에 있는 값을 가져온다, bGroup 역방향 정렬(DESC) 후 bStep 정방향 정렬(ASC)  
			
			preparedStatement = connection.prepareStatement(query); //위에 작성한 쿼리문을 connection으로 연결된 db에 전송
			
			resultSet = preparedStatement.executeQuery(); //select문의 결과를 resultSet에 넣는다.
			
			while(resultSet.next()) {//resultSet에 들어온 모든 레코드를 읽기(반복문)
				int bId = resultSet.getInt("bId");
				String bName = resultSet.getString("bName");
				String bTitle = resultSet.getString("bTitle");
				String bContent = resultSet.getString("bContent");
				Timestamp bDate = resultSet.getTimestamp("bDate");
				int bHit = resultSet.getInt("bHit");
				int bGroup = resultSet.getInt("bGroup");
				int bStep = resultSet.getInt("bStep");
				int bIndent = resultSet.getInt("bIndent");
				
				BDto dto = new BDto(bId, bName, bTitle, bContent, bDate, bHit, bGroup, bStep, bIndent); //생성자를 이용해 bDto생성
						
				dtos.add(dto);//배열에 얻은 값을 넣음 		
						
				
			}
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(resultSet!=null) resultSet.close();
				if(preparedStatement!=null) preparedStatement.close();
				if(connection!=null) connection.close();
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
		
		return dtos;

	}//list()
	
	public void write(String bName, String bTitle, String bContent) {
		
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		
		try {
			Class.forName("com.mysql.jdbc.Driver"); //mysql jdbc 드라이버 로딩
			connection = DriverManager.getConnection("jdbc:mySql://localhost:3306/freeboard", "test", "sky0595");
			
			String query = "INSERT INTO mvcboard(bName, bTitle, bContent, bHit, bGroup, bStep, bIndent) VALUES(?, ?, ?, 0, (select * from(select max(bId)+1 from mvcboard) as temp), 0, 0)"; //각 변수의 값을 테이블에 추가하는 쿼리문  
			
			preparedStatement = connection.prepareStatement(query);

			preparedStatement.setString(1, bName); //첫번째 벨류(=?)에 넣을값= bNmame
			preparedStatement.setString(2, bTitle);
			preparedStatement.setString(3, bContent);

			int rn = preparedStatement.executeUpdate(); //리턴이 있다면 작용한 열의 갯수 반환, 없다면 0을 반환한다.
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(preparedStatement!=null) preparedStatement.close();
				if(connection!=null) connection.close();
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
		
	}//write
	
	public BDto contentView(String strId) {
		
		upHit(strId);
		
		BDto dto = null;
		
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		
		try {
			Class.forName("com.mysql.jdbc.Driver"); //mysql jdbc 드라이버 로딩
			connection = DriverManager.getConnection("jdbc:mySql://localhost:3306/freeboard", "test", "sky0595");
			
			String query = "SELECT * FROM mvcboard WHERE bId=?"; //db에서 해당 bId을 가진 데이터를 가져온다  
			preparedStatement = connection.prepareStatement(query);
			preparedStatement.setInt(1,  Integer.parseInt(strId));
			resultSet = preparedStatement.executeQuery();
			
			if(resultSet.next()) {
				int bId = resultSet.getInt("bId");
				String bName = resultSet.getString("bName");
				String bTitle = resultSet.getString("bTitle");
				String bContent = resultSet.getString("bContent");
				Timestamp bDate = resultSet.getTimestamp("bDate");
				int bHit = resultSet.getInt("bHit");
				int bGroup = resultSet.getInt("bGroup");
				int bStep = resultSet.getInt("bStep");
				int bIndent = resultSet.getInt("bIndent");
				
				dto = new BDto(bId, bName, bTitle, bContent, bDate, bHit, bGroup, bStep, bIndent);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(resultSet!=null) resultSet.close();
				if(preparedStatement!=null) preparedStatement.close();
				if(connection!=null) connection.close();
				
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
		
		return dto; //dto 값을 반환한다.
	} //contentView
	
	public void upHit(String bId) {
		
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		
		try {
			
			Class.forName("com.mysql.jdbc.Driver");
			connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/freeboard", "test", "sky0595");
			
			String query = "UPDATE mvcboard SET bHit = bHit + 1 WHERE bId = ?";
			
			preparedStatement = connection.prepareStatement(query);
			preparedStatement.setString(1, bId);
			
			int rn = preparedStatement.executeUpdate();
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				
				if(preparedStatement!=null) preparedStatement.close();
				if(connection!=null) connection.close();
				
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
	}//upHit
	
	public void modify(String bId, String bName, String bTitle, String bContent) {
		
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		try {
			Class.forName("com.mysql.jdbc.Driver");
			connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/freeboard", "test", "sky0595");
		
			String query = "UPDATE mvcboard SET bName=?, bTitle=?, bContent=? WHERE bId=?";
		
			preparedStatement = connection.prepareStatement(query);
			preparedStatement.setString(1, bName);
			preparedStatement.setString(2, "(수정)"+bTitle);
			preparedStatement.setString(3, bContent);
			preparedStatement.setInt(4, Integer.parseInt(bId));
			
			int rn = preparedStatement.executeUpdate();
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				
				if(preparedStatement!=null) preparedStatement.close();
				if(connection!=null) connection.close();
				
			}catch(Exception e) {
				e.printStackTrace();
			}
		}
	} //modify() //수정필요
	
	public void delete(String bId) {
		Connection connection = null;
		PreparedStatement preparedStatement = null;

		
		try {
			Class.forName("com.mysql.jdbc.Driver");
			connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/freeboard", "test", "sky0595");
		
			String query ="DELETE FROM mvcboard WHERE bId = ?";
			preparedStatement = connection.prepareStatement(query);
			preparedStatement.setInt(1, Integer.parseInt(bId));
			
			int rn = preparedStatement.executeUpdate();
			
		    JOptionPane.showMessageDialog(F, "Msg", "Title",
                    JOptionPane.INFORMATION_MESSAGE, null);





		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			try {
				
				if(preparedStatement!=null) preparedStatement.close();
				if(connection!=null) connection.close();
				
			}catch(Exception e) {
				e.printStackTrace();
			}
		}


	} //delete
}
